#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require 'lexer.rex'
require 'wml_action/section'
require 'wml_action/log'

module WmlAction
  class WmlParser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 38)
include Log

...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,     4,    14,    17,    18,    19,     4,     8,    12,    13,
     5,     7,    20,    21,    22 ]

racc_action_check = [
    13,     0,    13,    13,    13,    13,     6,     6,     6,     6,
     1,     5,    15,    19,    20 ]

racc_action_pointer = [
    -1,    10,   nil,   nil,   nil,    11,     4,   nil,   nil,   nil,
   nil,   nil,   nil,    -4,   nil,     2,   nil,   nil,   nil,     5,
    10,   nil,   nil ]

racc_action_default = [
    -1,   -18,    -2,    -3,    -5,   -18,   -18,    23,    -4,    -6,
    -7,    -8,    -9,   -10,   -11,   -12,   -13,   -14,   -15,   -18,
   -18,   -16,   -17 ]

racc_goto_table = [
     3,     6,     1,     2,     9,    11,    10,    15 ]

racc_goto_check = [
     3,     4,     1,     2,     5,     6,     3,     7 ]

racc_goto_pointer = [
   nil,     2,     3,     0,    -3,    -2,    -1,    -6 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 12, :_reduce_none,
  1, 12, :_reduce_2,
  1, 13, :_reduce_3,
  3, 14, :_reduce_4,
  0, 15, :_reduce_5,
  2, 15, :_reduce_6,
  1, 16, :_reduce_7,
  1, 16, :_reduce_none,
  1, 16, :_reduce_9,
  1, 17, :_reduce_10,
  2, 17, :_reduce_11,
  2, 17, :_reduce_12,
  2, 17, :_reduce_13,
  2, 17, :_reduce_14,
  1, 18, :_reduce_15,
  2, 18, :_reduce_16,
  3, 18, :_reduce_17 ]

racc_reduce_n = 18

racc_shift_n = 23

racc_token_table = {
  false => 0,
  :error => 1,
  :OTAG => 2,
  :CTAG => 3,
  :MACRO => 4,
  :ATTR => 5,
  :APLAIN => 6,
  :ANUMBER => 7,
  :ASTR => 8,
  :UNDERSC => 9,
  "+" => 10 }

racc_nt_base = 11

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OTAG",
  "CTAG",
  "MACRO",
  "ATTR",
  "APLAIN",
  "ANUMBER",
  "ASTR",
  "UNDERSC",
  "\"+\"",
  "$start",
  "target",
  "wml_doc",
  "section",
  "contents",
  "content",
  "attribute",
  "string_val" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.y', 3)
  def _reduce_2(val, _values, result)
     log.debug "Found a target" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_3(val, _values, result)
     log.debug "Found a doc"; return WmlAction::Section.new(name: "Global", subs: [val[0]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 7)
  def _reduce_4(val, _values, result)
     log.debug("Creating section #{val[0]}"); return WmlAction::Section.new(name: val[0], content: val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_5(val, _values, result)
     return [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 10)
  def _reduce_6(val, _values, result)
     log.debug("Append #{val[1]} to #{val[0]}"); return val[0]? val[0].push(val[1]) : [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_7(val, _values, result)
     log.debug "Found a content subsection #{val[0]}" 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_9(val, _values, result)
     log.debug "Found a macro #{val[0]}"; return WmlAction::Section::Macro[val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_10(val, _values, result)
     log.debug "Found empty attribute: #{val[0]}"; return WmlAction::Section::Attribute[val[0],''] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_11(val, _values, result)
     log.debug "Found plain attribute: #{val[0]}:#{val[1]}"; return WmlAction::Section::Attribute[val[0],val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_12(val, _values, result)
     log.debug "Found string attribute: #{val[0]}:#{val[1]}"; return WmlAction::Section::Attribute[val[0],val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_13(val, _values, result)
     log.debug "Found macro attribute: #{val[0]}:#{val[1]}"; return WmlAction::Section::Attribute[val[0],val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_14(val, _values, result)
     log.debug "Found numeric attribute: #{val[0]}:#{val[1]}"; return WmlAction::Section::Attribute[val[0],val[1]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_15(val, _values, result)
     return " #{val[0]}" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_16(val, _values, result)
     return " "+val[0]+" "+val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_17(val, _values, result)
     return val[0] + "+" + val[2] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class WmlParser
  end   # module WmlAction


